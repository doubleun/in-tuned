import '@styles/globals.css'
import { roboto as font } from '@fonts'
import { NextResponse } from 'next/server'
import { cookies } from 'next/headers'
import clsx from 'clsx'
import Image from 'next/image'
import Header from '@components/compound/Header'

export const metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

const helperTwClass = {
  debugBreakpointColor:
    'bg-black md:bg-slate-600 lg:bg-fuchsia-700 xl:bg-rose-700',
}

const rootLayoutTwClass = {
  // bgWrap: 'fixed h-full w-full overflow-hidden z-[-1]',
  // bgWrap: 'absolute inset-0 h-[100svh] w-full overflow-visible z-[-1] bg-black',
  bgWrap: 'absolute inset-0 h-[100svh] w-full z-[-1] bg-black',
  homePageParent: 'relative bg-white dark:bg-transparent h-fit w-auto',
  charContainer:
    'absolute w-24 h-36 right-[1%] top-[46%] translate-y-[-60%] sm:w-32 sm:h-48 sm:right-[10%] md:w-40 md:h-60 md:top-[48%] lg:w-44 lg:h-64 lg:right-[12%] xl:right-[20%]',
  charAnimation:
    'animate-bounce duration-6000 ease-in-out top-[34%] md:top-[28%] lg:top-[30%]',
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  //TODO: Handle dark mode with cookies
  // let response = NextResponse.next()
  // const cookieStore = cookies()
  // const currentTheme = cookieStore.get('theme')?.value

  // if (!currentTheme) response.cookies.set('theme', 'light')

  return (
    <html
      lang="en"
      // default dark theme
      className={clsx([font.className, 'dark'], {
        // ['dark']: currentTheme === 'dark'
      })}
    >
      <body className="relative h-fit">
        {/* Header */}
        <div
          data-test-id="main-header-nav"
          className="sticky top-0 z-1 bg- custom-container"
        >
          <Header
            logo={<Header.Logo text="In-tuned" />}
            toggleTheme={<Header.ToggleTheme />}
          />
        </div>

        {/* home page background */}
        <div className={rootLayoutTwClass.bgWrap}>
          <Image
            src={'/bg.png'}
            alt="bg"
            priority
            fill={true}
            className="object-cover object-center opacity-50"
          />
          {/* character home page background */}
          <div
            className={clsx([
              rootLayoutTwClass.charContainer,
              rootLayoutTwClass.charAnimation,
            ])}
          >
            <Image src={'/char_bg.png'} alt="char" fill={true} />
          </div>
        </div>
        <div className={rootLayoutTwClass.homePageParent}>{children}</div>
      </body>
    </html>
  )
}
